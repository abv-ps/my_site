services:
  custom_postgres:
    image: postgres:17.4
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - mydb_data:/var/lib/postgresql/data
    networks:
      - kafka-net

  rabbitmq:
    image: rabbitmq:4.0.9
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"   # RabbitMQ web interface
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - kafka-net

  redis:
    image: redis:7.4.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kafka-net

  web:
    build: .
    command: bash -c "python manage.py migrate &&
                      uvicorn my_site.asgi:application --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
      - media_data:/app/media/
    env_file:
      - .env
    depends_on:
      - custom_postgres
      - redis
      - rabbitmq
      - kafka
    ports:
      - "8000:8000"
    networks:
      - kafka-net

  kafka-consumer:
    build: .
    command: python commands/kafka_consumer.py
    depends_on:
      - web
      - kafka
      - custom_postgres
    env_file:
      - .env
    networks:
      - kafka-net

  celery:
    build: .
    command: ./celery_tasks/start_celery.sh
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
    networks:
      - kafka-net

  celery-beat:
    build: .
    command: celery -A celery_tasks beat --loglevel=info
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
    env_file:
        - .env
    networks:
      - kafka-net

  flower:
    image: mher/flower:2.0.1
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
    env_file:
      - .env
    networks:
      - kafka-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka-net

volumes:
  kafka_data:
  mydb_data:
  media_data:
  rabbitmq_data:
  redis_data:
  zookeeper_data:

networks:
  kafka-net:
    external: true


